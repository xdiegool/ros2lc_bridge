#!/usr/bin/env python

import sys
from optparse import OptionParser
import socket
import labcomm2014
import lc_types                 # The .lc generated by the generator.
from threading import Timer
import signal

running = True

def handler(signum, frame):
    global running
    running = False


class Pingpong:
    def __init__(self, port):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.sock.bind(('127.0.0.1', 8080))
        self.sock.listen(5)

    def run(self):
        while running:
            (csock, address) = self.sock.accept()

            f = csock.makefile()
            self.enc = labcomm2014.Encoder(labcomm2014.StreamWriter(f))
            d = labcomm2014.Decoder(labcomm2014.StreamReader(f))

            self.enc.add_decl(lc_types.S__ping.signature)
            self.counter = 0

            self.send_ping()
            while running:
                value, decl = d.decode()
                if value:
                    print decl.name, 'says:', value.s
            self.t.cancel()

    def send_ping(self):
        ping = lc_types.S__ping()
        ping.s = "EHLO %d" % self.counter
        self.counter += 1
        self.enc.encode(ping, ping.signature)
        self.t = Timer(1, self.send_ping)
        self.t.start()


if __name__ == '__main__':
    signal.signal(signal.SIGINT, handler)
    op = OptionParser()
    op.add_option('-p', '--port', dest='port', default=7357,
                  help='The port to listen on.')
    (opt, args) = op.parse_args(sys.argv)

    s = Pingpong(int(opt.port))
    s.run()
