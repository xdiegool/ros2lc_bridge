#!/usr/bin/env python

import sys
from optparse import OptionParser
import socket
import labcomm
import proto
import lc_types                 # The .lc generated by the generator.
from threading import Timer
import signal

running = True

def handler(signum, frame):
    global running
    running = False


class Pingpong:
    def __init__(self, port):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        sock.connect((socket.gethostname(), port))
        f = sock.makefile()
        e = labcomm.Encoder(labcomm.StreamWriter(f))
        d = labcomm.Decoder(labcomm.StreamReader(f))

        e.add_decl(proto.subscribe.signature)
        e.add_decl(proto.publish.signature)
        e.add_decl(lc_types.S__ping.signature)

        pub = proto.publish()
        pub.topic = 'S__ping'
        e.encode(pub, pub.signature)

        sub = proto.subscribe()
        sub.topic = 'S__pong'
        e.encode(sub, sub.signature)

        self.enc = e
        self.dec = d

        self.counter = 0

    def run(self):
        self.send_ping()
        while running:
            value, decl = self.dec.decode()
            if value:
                print decl.name, 'says:', value.s
            print "recving"
        self.t.cancel()

    def send_ping(self):
        ping = lc_types.S__ping()
        ping.s = "EHLO %d" % self.counter
        self.counter += 1
        print "sending"
        self.enc.encode(ping, ping.signature)
        self.t = Timer(1, self.send_ping)
        self.t.start()


if __name__ == '__main__':
    signal.signal(signal.SIGINT, handler)
    op = OptionParser()
    op.add_option('-p', '--port', dest='port', default=7357,
                  help='The port to connect to.')
    (opt, args) = op.parse_args(sys.argv)

    s = Pingpong(int(opt.port))
    s.run()
