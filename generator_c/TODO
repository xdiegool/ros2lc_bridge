# TODO for C++

## TOP PRIO
	* Break out `if in_array` stuff into a function.
	* Implement some sort of custom conversion code. C or Lua?
	* Change <py /> tag in config to something more generic.
    * Merge C++ generator with Python.
	* Fix the topics_in/topics_out, which is which and switch them out for
	  export and import FFS.

## LATER
    * Perhaps keep a pool of service threads per client to avoid spawning new
      ones every time a service call comes in?


# Other
1. Generator queries master for all avail. topics and generates pkg.
   This include creating equivalent labcomm types.
   Use static config file to some extent.

2. Request comes in over lc. conf. channel and requests a topic.

   Req. format:
   Query: topic name

3. If no ros::subscriber exists, then create one.
   Otherwise $(reuse or create another one anyway?).
